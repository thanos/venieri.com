"""
Django settings for venieri project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'home',
    'search',
    'wagtail.contrib.modeladmin',
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.contrib.settings',
    # 'wagtail.contrib.wagtailstyleguide',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'dashboard',
    'wagtail.admin',
    'wagtail.core',
    'wagtailmetadata',

    'modelcluster',
    'taggit',
    'sortedm2m',
    'django.contrib.admin',
    'django.contrib.auth',
    # 'polymorphic',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.sitemaps",

    'django_crypto_fields.apps.AppConfig',
    'django_extensions',
    'storages',
    'wagtailmedia',
    'embed_video',
    'wagtail_embed_videos',
    'wagtailschemaorg',
]

# INSTALLED_APPS += [
#
#     'wagtail_feeds',
# ]

INSTALLED_APPS += [
'bakery',
'wagtailbakery',
]


INSTALLED_APPS += [
    'events',
    'work',
    'socialmedia',
    'images',]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',


    'wagtail.core.middleware.SiteMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'venieri.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'wagtail.contrib.settings.context_processors.settings',
    #            'wagtailmenus.context_processors.wagtailmenus',
            ],
        },
    },
]

WSGI_APPLICATION = 'venieri.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static'),
]

# ManifestStaticFilesStorage is recommended in production, to prevent outdated
# Javascript / CSS assets being served from cache (e.g. after a Wagtail upgrade).
# See https://docs.djangoproject.com/en/2.1/ref/contrib/staticfiles/#manifeststaticfilesstorage
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Wagtail settings

WAGTAIL_SITE_NAME = "venieri"

WAGTAILIMAGES_IMAGE_MODEL = 'images.CustomImage'

# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'http://example.com'

# WAGTAILADMIN_RICH_TEXT_EDITORS = {
#     'default': {
#         'WIDGET': 'wagtailtinymce.rich_text.TinyMCERichTextArea'
#     },
# }

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

TAGGIT_CASE_INSENSITIVE = True
TAG_SPACES_ALLOWED = True

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

sentry_sdk.init(
    dsn="https://c195d5ae1c9445a094a2c5c54d8c8c28@sentry.io/1403550",
    integrations=[DjangoIntegration()]
)

BUILD_DIR = os.path.join(BASE_DIR, '../build')

BAKERY_VIEWS = (
    'wagtailbakery.views.AllPublishedPagesView',
)

# AUTO_CREATE_KEYS=True
ETC_DIR='/etc/'
KEY_PATH = os.path.join(BASE_DIR, 'keys')
KEY_PREFIX = 'lv00'

AUTO_CREATE_KEYS=os.environ.get('AUTO_CREATE_KEYS', False)


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'venieri',
        'USER': 'venieri',
        'PASSWORD': os.environ.get('VENIERI_DB_PASSWORD'),
        'HOST': 'web625.webfaction.com',
        'PORT': '5432',
    }
}


AWS_STORAGE_BUCKET_NAME = 'media.venieri.com'
AWS_BUCKET_NAME = AWS_STORAGE_BUCKET_NAME
AWS_ACCESS_KEY_ID = 'AKIAJGPWIS23ZWYLYKBQ'
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY', False)
# AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
#
#
# MEDIA_URL = "https://%s/" % AWS_S3_CUSTOM_DOMAIN
MEDIA_URL = 'https://s3.amazonaws.com/%s/' % AWS_STORAGE_BUCKET_NAME
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

AUTO_CREATE_KEYS=os.environ.get('AUTO_CREATE_KEYS', False)


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'venieri',
        'USER': 'venieri',
        'PASSWORD': os.environ.get('VENIERI_DB_PASSWORD'),
        'HOST': "main.c78ooagihf4j.us-east-1.rds.amazonaws.com", #'web625.webfaction.com',
        'PORT': '5432',
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    },
    'TIMEOUT': 60,
    'OPTIONS': {
            'MAX_ENTRIES': 1000
        }
}


